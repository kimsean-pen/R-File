knitr::opts_chunk$set(echo = TRUE)
---
title: "DS311 - Basic R Lab Exercise"
# Numeric - Double precision by default
n1 <- 15
n1
typeof(n1)
n2 <- 1.5
n2
typeof(n2)
# Character
c1 <- "c"
c1
typeof(c1)
c2 <- "a string of text"
c2
typeof(c2)
# Logical
l1 <- TRUE
l1
typeof(l1)
l2 <- F
l2
typeof(l2)
# Transforming numeric into characters
num <- 10
numToChar <- as.character(num)
paste("num Type: ", typeof(num), " | numToChar: ", typeof(numToChar))
# Transforming characters into numeric
char <- "10"
charToNum <- as.numeric(char)
paste("char Type: ", typeof(num), " | charToNum: ", typeof(numToChar))
# Check the data type of the following variables
a <- as.integer(500)
b <- as.double(500)
c <- as.character(500)
# Enter your code here!
typeof(a)
typeof(b)
typeof(c)
# Check the data type of the new variable 'd'
d <- a / b
# Enter your code here!
typeof(d)
# Vector
v1 <- c(1, 2, 3, 4, 5)
v1
is.vector(v1)
v2 <- c("a", "b", "c")
v2
is.vector(v2)
v3 <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
v3
is.vector(v3)
# Matrix
m1 <- matrix(c(T, T, F, F, T, F), nrow = 2)
m1
is.matrix(m1)
m2 <- matrix(c("a", "b",
"c", "d"),
nrow = 2,
byrow = T)
m2
is.matrix(m2)
# Enter your code here.
letters
LETTERS
# Enter your code here.
letters
LETTERS
v1 -> c(letters)
# Enter your code here.
letters
LETTERS
lower_case_letter = letters
# Enter your code here.
letters
LETTERS
lower_case_letter = letters
upper_case_matrix = matrix (LETTERS, nrow=2, ncol=13, byrow = T)
View(upper_case_matrix)
# Data Frame
# Can combine vectors of the same length
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
df1 <- cbind(vNumeric, vCharacter, vLogical)
df1  # Coerces all values to most basic data type
df2 <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df2  # Makes a data frame with three different data types
# Check your current working directory
# wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
# Check your current working directory
wd1 <- getwd()
# paste("Current Working Directory: ", wd1)
# Setting the working directory for a project
# setwd("c://.../project")
# wd2 <- getwd()
# paste("Current Working Directory: ", wd2)
# Check your current working directory
wd1 <- getwd()
paste("Current Working Directory: ", wd1)
# Setting the working directory for a project
setwd("c://.../project")
# Check your current working directory
wd1 <- getwd()
paste("Current Working Directory: ", wd1)
# Setting the working directory for a project
setwd("/Users/kimseanpen/Desktop/DS_311/R-File/R_Exercise")
wd2 <- getwd()
paste("Current Working Directory: ", wd2)
# Check your current working directory
wd1 <- getwd()
paste("Current Working Directory: ", wd1)
# Setting the working directory for a project
setwd("R_Project_File")
# Check your current working directory
wd1 <- getwd()
paste("Current Working Directory: ", wd1)
# Setting the working directory for a project
setwd("/Users/kimseanpen/Desktop/DS_311/R-File/R_Exercise")
wd2 <- getwd()
paste("Current Working Directory: ", wd2)
# Install a new package, note the quotation marks
install.packages("mass")
# Install multiple packages at once
install.packages(c("dplyr", "ggplot2"))
# Loading the package, note no quotation marks
library(dplyr)
# Checking the package version
packageVersion("dplyr")
# List all functions in a package
ls("package:ggplot2")
# Write your code here!
# Part a
x = 4
# Part b
y = 12
# Part c
print(x)
print(y)
# Part d
# Part e
print(paste("y divided by x is equal to ", z))
print(x)
print(y)
z = y/x
z = y/x
# Part e
print(paste("y divided by x is equal to ", z))
# Write your code here!
# Part a
x = 4
# Part b
y = 12
# Part c
print(x)
print(y)
# Part d
z = y/x
# Part e
print(paste("y divided by x is equal to ", z))
# Do not need to change the following code!
if (exists("x") == TRUE | exists("y") == TRUE | exists("z") == TRUE){
if (x == 4 & y == 12 & z == 3) {
print("Congratulation!!  You completed the first activity in this class!!")
} else {
print("Sorry, you got it wrong!")
}
} else {
print("You did not complete the last problem!")
}
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Numeric - Double precision by default
n1 <- 15
n1
typeof(n1)
n2 <- 1.5
n2
typeof(n2)
# Character
c1 <- "c"
c1
typeof(c1)
c2 <- "a string of text"
c2
typeof(c2)
# Logical
l1 <- TRUE
l1
typeof(l1)
l2 <- F
l2
typeof(l2)
# Transforming numeric into characters
num <- 10
numToChar <- as.character(num)
paste("num Type: ", typeof(num), " | numToChar: ", typeof(numToChar))
# Transforming characters into numeric
char <- "10"
charToNum <- as.numeric(char)
paste("char Type: ", typeof(num), " | charToNum: ", typeof(numToChar))
# Check the data type of the following variables
a <- as.integer(500)
b <- as.double(500)
c <- as.character(500)
# Enter your code here!
typeof(a)
typeof(b)
typeof(c)
# Check the data type of the new variable 'd'
d <- a / b
# Enter your code here!
typeof(d)
# Vector
v1 <- c(1, 2, 3, 4, 5)
v1
is.vector(v1)
v2 <- c("a", "b", "c")
v2
is.vector(v2)
v3 <- c(TRUE, TRUE, FALSE, FALSE, TRUE)
v3
is.vector(v3)
# Matrix
m1 <- matrix(c(T, T, F, F, T, F), nrow = 2)
m1
is.matrix(m1)
m2 <- matrix(c("a", "b",
"c", "d"),
nrow = 2,
byrow = T)
m2
is.matrix(m2)
# Enter your code here.
letters
LETTERS
lower_case_letter = letters
upper_case_matrix = matrix (LETTERS, nrow=2, ncol=13, byrow = T)
# Data Frame
# Can combine vectors of the same length
vNumeric   <- c(1, 2, 3)
vCharacter <- c("a", "b", "c")
vLogical   <- c(T, F, T)
df1 <- cbind(vNumeric, vCharacter, vLogical)
df1  # Coerces all values to most basic data type
df2 <- as.data.frame(cbind(vNumeric, vCharacter, vLogical))
df2  # Makes a data frame with three different data types
# Check your current working directory
wd1 <- getwd()
paste("Current Working Directory: ", wd1)
# Setting the working directory for a project
setwd("/Users/kimseanpen/Desktop/DS_311/R-File/R_Exercise")
wd2 <- getwd()
paste("Current Working Directory: ", wd2)
# Install a new package, note the quotation marks
install.packages("MASS")
# Install multiple packages at once
install.packages(c("dplyr", "ggplot2"))
# Loading the package, note no quotation marks
library(dplyr)
# Checking the package version
packageVersion("dplyr")
# List all functions in a package
ls("package:ggplot2")
install.packages(c("dplyr", "ggplot2"))
knitr::opts_chunk$set(echo = TRUE)
# Install a new package, note the quotation marks
install.packages("MASS")
# Install multiple packages at once
install.packages(c("dplyr", "ggplot2"))
# Loading the package, note no quotation marks
library(dplyr)
# Checking the package version
packageVersion("dplyr")
# List all functions in a package
ls("package:ggplot2")
